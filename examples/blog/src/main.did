type BlogPost = record {
    "title": text;
    "body": text;
    "author": text;
    "publish_date": nat;
    "last_modified": nat;
};

type CreateCanisterArgs = record {
    "settings": opt CanisterSettings;
};

type UpdateSettingsArgs = record {
    "canister_id": principal;
    "settings": CanisterSettings;
};

type InstallCodeArgs = record {
    "mode": InstallCodeMode;
    "canister_id": principal;
    "wasm_module": blob;
    "arg": blob;
};

type UninstallCodeArgs = record {
    "canister_id": principal;
};

type StartCanisterArgs = record {
    "canister_id": principal;
};

type StopCanisterArgs = record {
    "canister_id": principal;
};

type CanisterStatusArgs = record {
    "canister_id": principal;
};

type DeleteCanisterArgs = record {
    "canister_id": principal;
};

type DepositCyclesArgs = record {
    "canister_id": principal;
};

type ProvisionalCreateCanisterWithCyclesArgs = record {
    "amount": opt nat;
    "settings": opt CanisterSettings;
};

type ProvisionalTopUpCanisterArgs = record {
    "canister_id": principal;
    "amount": nat;
};

type CreateCanisterResult = record {
    "canister_id": principal;
};

type CanisterStatusResult = record {
    "status": CanisterStatus;
    "settings": DefiniteCanisterSettings;
    "module_hash": opt blob;
    "memory_size": nat;
    "cycles": nat;
};

type ProvisionalCreateCanisterWithCyclesResult = record {
    "canister_id": principal;
};

type CanisterSettings = record {
    "controllers": opt vec principal;
    "compute_allocation": opt nat;
    "memory_allocation": opt nat;
    "freezing_threshold": opt nat;
};

type DefiniteCanisterSettings = record {
    "controllers": vec principal;
    "compute_allocation": nat;
    "memory_allocation": nat;
    "freezing_threshold": nat;
};

type InstallCodeMode = variant { "install": null; "reinstall": null; "upgrade": null };

type CanisterStatus = variant { "running": null; "stopping": null; "stopped": null };

service: {
    "get_blog_posts": () -> (vec BlogPost) query;
    "list_posts": () -> (text) query;
    "read_post": (nat32) -> (BlogPost) query;
    "get_post_count": () -> (nat32) query;
    "get_id": () -> (text) query;
    "create_post": (text, text, text) -> (BlogPost);
    "update_post": (nat32, text) -> (BlogPost);
    "delete_post": (nat32) -> ();
    "generate_id": () -> (text);
}